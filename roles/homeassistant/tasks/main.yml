---
# tasks file for homeassistant
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - main.yml
      paths:
        - "vars"
  become: no

- name: "Install packages"
  ansible.builtin.package:
    name: "{{ hearthminion_packages }}"
    state: present
  tags:
    - install-packages

- name: "Install Home Assistant Docker Container."
  community.docker.docker_container:
    name: "homeassistant"
    image: "homeassistant/raspberrypi3-homeassistant:stable"
    restart_policy: unless-stopped
    network_mode: host
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ homeassistant_config_dir }}:/config"
    detach: yes
    init: yes
    container_default_behavior: no_defaults
    auto_remove: no
    interactive: no
    memory: "0"
    paused: no
    privileged: no
    read_only: no
    tty: no
                
# ==================================================================================================
#
# Task: Create Cron to reboot system daily at 4 AM.
#
# Yes, we know this can be done through Home Assistant.  This is a way to protect against a failure
# of Home Assistant itself.
#
# TODO: Create script that checks for a valid configuration before rebooting.  If configuration is
#       not valid, email <user> <log output from check> to inform the user instead of rebooting
#
# ==================================================================================================
# - name: "Create cron to reboot system daily at 4 AM."
#   cron:
#     name: "Reboot System"
#     minute: "0"
#     hour: "4"
#     job: "/sbin/reboot"
#   tags:
