---
# tasks file for zwavejs2mqtt
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - main.yml
      paths:
        - "vars"
  become: no
  tags:
    - upgrade

- name: "Install packages"
  ansible.builtin.package:
    name: "{{ hearthminion_packages }}"
    state: present
  become: yes
  tags:
    - install-packages
    - upgrade

- name: "Check if we need the websocket port enabled."
  ansible.builtin.set_fact:
    __zwavejs2mqtt_exposed_ports: "{{ __zwavejs2mqtt_exposed_ports }} + [ {{ __zwavejs2mqtt_ws_port }}:{{ __zwavejs2mqtt_ws_port }} ]"
  become: no
  when:
    - zwavejs2mqtt_ws_enabled
  tags:
    - upgrade

- name: "Check if we are upgrading zwavejs2mqtt."
  ansible.builtin.set_fact:
    __zwavejs2mqtt_upgrade: yes
  become: no
  tags:
    - never
    - upgrade
    - upgrade-zwavejs2mqtt
    - upgrade-zwave

- name: "Install zwavejs2mqtt Docker Container."
  community.docker.docker_container:
    name: "zwavejs2mqtt"
    # image: "zwavejs/zwave-js-ui:latest"
    # restart_policy: unless-stopped
    # network_mode: host
    # volumes:
    #   - "{{ zwavejs2mqtt_config_dir }}:/usr/src/app/store"
    # exposed_ports: "{{ __zwavejs2mqtt_exposed_ports }}"
    # detach: yes
    # devices: "{{ zwavejs2mqtt_devices }}"
    # init: yes
    # container_default_behavior: no_defaults
    # auto_remove: no
    # interactive: no
    # memory: "0"
    # paused: no
    # privileged: no
    # read_only: no
    # tty: true
    # pull: "{{ __zwavejs2mqtt_upgrade }}"
    state: absent
  become: yes
  tags:
    - upgrade

# ==================================================================================================
#
# This needs another way of checking and disabling.
#
# Two sites cannot both have "default_server" set.  So what really needs to happen is a way to check
# if another site has that value set.  If so, we need to not enable "default_server" in this
# configuration file.
#
# Current workaround is to install our site, and remove "default" site from the enabled servers.
#
# This will break setups where "default" site is another website on the host that is in use.
#
# ==================================================================================================
- name: "Install Nginx virtual host config file."
  ansible.builtin.template:
    src: "nginx-site.conf.j2"
    dest: "/etc/nginx/sites-available/{{ item.name }}.conf"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ virtual_hosts }}"
  become: yes
  when:
    - virtual_hosts is defined
    - item.content is defined
    - item.content == "zwavejs2mqtt"
    - item.enabled is defined
    - item.enabled
  notify: reload nginx
  tags:
    - upgrade

- name: "Enable nginx site."
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ item.name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.name }}.conf"
    owner: root
    group: root
    state: "link"
  loop: "{{ virtual_hosts }}"
  become: yes
  when:
    - virtual_hosts is defined
    - item.content is defined
    - item.content == "zwavejs2mqtt"
    - item.enabled is defined
    - item.enabled
  notify: reload nginx
  tags:
    - upgrade
