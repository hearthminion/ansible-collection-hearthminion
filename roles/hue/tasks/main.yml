---
# tasks file for hue
- name: "Initialize Hub."
  include_tasks: "initialize.yml"
  when:
    - hearthminion_hue_username == "password"
  tags:
    - hue

- name: "Configure Lights."
  include_tasks: "lights.yml"
  when:
    - hearthminion_hue_lights is truthy
  tags:
    - hue
    - hue-lights
    - hue-homeassistant

- name: "Ensure Hue Settings JSON directory exists."
  ansible.builtin.file:
    path: "{{ hearthminion_hue_json_dir }}"
    owner: "{{ hearthminion_user }}"
    group: "{{ hearthminion_group }}"
    mode: "0700"
    state: directory
  become: false
  delegate_to: localhost
  run_once: true
  tags:
    - hue
    - hue-info
    - hue-lights

- name: "Get hue light definitions."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/clip/v2/resource/light"
    method: GET
    dest: "{{ hearthminion_hue_json_dir }}/{{ hearthminion_hue_hub_id }}_lights.json"
    mode: "0644"
    headers:
      hue-application-key: "{{ hearthminion_hue_username }}"
    ca_path: "{{ role_path }}/files/hue.crt"
    validate_certs: false
    body_format: json
  delegate_to: localhost
  become: no
  when:
    - hearthminion_hue_hub_id is defined
    - hearthminion_hue_username is defined
  tags:
    - hue
    - hue-info
    - hue-lights

- name: "Configure Groups."
  include_tasks: "groups.yml"
  when:
    - hearthminion_hue_groups is truthy
  tags:
    - hue
    - hue-groups

- name: "Get hue room definitions."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/clip/v2/resource/room"
    method: GET
    dest: "{{ hearthminion_hue_json_dir }}/{{ hearthminion_hue_hub_id }}_rooms.json"
    mode: "0644"
    headers:
      hue-application-key: "{{ hearthminion_hue_username }}"
    ca_path: "{{ role_path }}/files/hue.crt"
    validate_certs: false
    body_format: json
  delegate_to: localhost
  become: no
  when:
    - hearthminion_hue_hub_id is defined
    - hearthminion_hue_json_dir is truthy
    - hearthminion_hue_username is defined
  tags:
    - hue
    - hue-groups
    - hue-info

- name: "Get hue zone definitions."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/clip/v2/resource/zone"
    method: GET
    dest: "{{ hearthminion_hue_json_dir }}/{{ hearthminion_hue_hub_id }}_zones.json"
    mode: "0644"
    headers:
      hue-application-key: "{{ hearthminion_hue_username }}"
    ca_path: "{{ role_path }}/files/hue.crt"
    validate_certs: false
    body_format: json
  delegate_to: localhost
  become: no
  when:
    - hearthminion_hue_hub_id is defined
    - hearthminion_hue_json_dir is truthy
    - hearthminion_hue_username != "password"
  tags:
    - hue
    - hue-groups
    - hue-info

- name: "Configure Scenes."
  include_tasks: "scenes.yml"
  when:
    - hearthminion_hue_scenes is truthy
  tags:
    - hue
    - hue-scenes
    - hue-homeassistant

- name: "Get hue scene definitions."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/clip/v2/resource/scene"
    method: GET
    dest: "{{ hearthminion_hue_json_dir }}/{{ hearthminion_hue_hub_id }}_scenes.json"
    mode: "0644"
    headers:
      hue-application-key: "{{ hearthminion_hue_username }}"
    ca_path: "{{ role_path }}/files/hue.crt"
    validate_certs: false
    body_format: json
  delegate_to: localhost
  become: no
  when:
    - hearthminion_hue_hub_id is defined
    - hearthminion_hue_json_dir is truthy
    - hearthminion_hue_username != "password"
  tags:
    - hue
    - hue-info
    - hue-scenes

# ==================================================================================================
#
# Rules have not yet been converted to API v2
#
# ==================================================================================================
- name: "Get hue rule definitions."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/api/{{ hearthminion_hue_username }}/rules"
    method: GET
    dest: "{{ hearthminion_hue_json_dir }}/{{ hearthminion_hue_hub_id }}_rules.json"
    ca_path: "{{ role_path }}/files/hue.crt"
    validate_certs: false
    body_format: json
  delegate_to: localhost
  become: no
  when:
    - hearthminion_hue_hub_id is defined
    - hearthminion_hue_json_dir is truthy
    - hearthminion_hue_username is defined
  tags:
    - hue
    - hue-info

# ==================================================================================================
#
# Reboot Hubs
#
# After making many changes via API calls, I have found the hub tends to get sluggish until it is
# rebooted.  Therefore, after running this playbook, we reboot the hub.
#
# FIXME: This doesn't actually work like it should.  While supposedly this is a valid command, the
#        hue bridge doesn't seem to do anything with it.  The bridge doesn't reboot.  The bridge
#        does not provide an error message.
#
# ==================================================================================================
#- name: "Reboot Hubs."
#   ansible.builtin.uri:
#     url: "https://{{ ansible_host }}/api/{{ hearthminion_hue_username }}/config"
#     method: POST
#     validate_certs: false
#     body: "{{ json_data | to_json }}"
#     body_format: json
#   delegate_to: localhost
#   become: no
#   vars:
#     json_data:
#       reboot: "true"

- name: "Update Home Assistant Hub IDs."
  ansible.builtin.uri:
    url: "http://{{ homeassistant_host }}/api/services/input_text/set_value"
    method: POST
    headers:
      Authorization: "Bearer {{ hearthminion_homeassistant_auth_token }}"
      Content-type: "application/json"
    body: "{{ json_data | to_json }}"
    validate_certs: false
    body_format: json
  vars:
    homeassistant_host: "{{ hearthminion_hue_ha_host | default(groups['homeassistant'][0]) }}:8123"
    json_data:
      entity_id: "{{ hearthminion_hue_ha_entity }}"
      value: "{{ ansible_host }}"
  when:
    - hearthminion_hue_lights is truthy
    - hearthminion_hue_ha_entity is defined
    - groups['homeassistant'] is defined
  delegate_to: localhost
  become: no
  tags:
    - hue
    - hue-homeassistant
