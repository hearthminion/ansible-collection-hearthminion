---
- name: "Create Hue Scenes."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/clip/v2/resource/scene"
    method: POST
    headers:
      hue-application-key: "{{ hearthminion_hue_username }}"
    body: "{{ item['scene_definition'] | to_json }}"
    ca_path: "hue.crt"
    validate_certs: false
    body_format: json
    status_code:
      - 200
      - 201
  loop: "{{ hearthminion_hue_scenes }}"
  delegate_to: localhost
  become: no
  when:
    - hearthminion_hue_scenes is truthy
    - item['scene_definition'] is defined
    - item['scene_definition']['group']['rid'] is truthy
    - (item['id'] is not defined or item['id'] is falsy)

- name: "Update Hue Scenes."
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/clip/v2/resource/scene/{{ item['id'] }}"
    method: PUT
    headers:
      hue-application-key: "{{ hearthminion_hue_username }}"
    body: "{{ __scene | to_json }}"
    ca_path: "hue.crt"
    validate_certs: false
    body_format: json
  loop: "{{ hearthminion_hue_scenes }}"
  vars:
    __scene: "{{ item['scene_definition'] | dict2items | rejectattr('key', 'search', 'group') | items2dict }}"
  when:
    - hearthminion_hue_scenes is truthy
    - item['scene_definition'] is defined
    - item['scene_definition']['metadata']['image'] is not defined
    - item['scene_definition']['actions'] is defined
    - item['id'] is defined
    - item['id'] is truthy
    - item['scene_definition']['metadata']['name'] != hearthminion_hue_scene_homeassistant
  delegate_to: localhost
  become: no

- name: "Update Home Assistant Scene Entity IDs."
  ansible.builtin.uri:
    url: "http://{{ homeassistant_host }}/api/services/input_text/set_value"
    method: POST
    headers:
      Authorization: "Bearer {{ hearthminion_homeassistant_auth_token }}"
      Content-type: "application/json"
    body: "{{ json_data | to_json }}"
    validate_certs: false
    body_format: json
    status_code:
      - 200
      - 201
  loop: "{{ hearthminion_hue_scenes }}"
  vars:
    homeassistant_host: "{{ hearthminion_hue_ha_host | default(groups['homeassistant'][0]) }}:8123"
    json_data:
      entity_id: "{{ item.ha_entity }}"
      value: "{{ item.id }}"
  when:
    - hearthminion_hue_scenes is truthy
    - item.id
    - item.ha_entity is defined
    - groups['homeassistant'] is defined
  delegate_to: localhost
  become: no
